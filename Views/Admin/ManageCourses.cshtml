@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model List<SIMS_App.Models.Course>

@{
    ViewData["Title"] = "Manage Courses";
}

<style>
    #studentsList {
        margin-top: 20px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 5px;
    }

        #studentsList table {
            margin-top: 10px;
        }

    .alert {
        margin-top: 20px;
    }
</style>

<div class="container">
    <div id="studentsList" style="display: none;"></div>
    <h2 class="text-center">Manage Courses</h2>

    <input type="text" id="courseName" placeholder="Course Name">
    <input type="date" id="startDate">
    <input type="date" id="endDate">
    <input type="number" id="totalStudents" placeholder="Total Students">
    <input type="number" id="sessions" placeholder="Number of Sessions">
    <button class="btn btn-success" onclick="addCourse()">Add Course</button>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Total Students</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Sessions</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="courseTable">
            @foreach (var course in Model)
            {
                <tr id="course_@course.CourseId">
                    <td>@course.CourseId</td>
                    <td>@course.Name</td>
                    <td>@course.TotalStudents</td>
                    <td>@course.StartDate.ToString("dd/MM/yyyy")</td>
                    <td>@course.EndDate.ToString("dd/MM/yyyy")</td>
                    <td>@course.NumberOfSessions</td>
                    <td>
                        <button class="btn btn-primary" onclick="editCourse(@course.CourseId, '@course.Name')">Edit</button>
                        <button class="btn btn-danger" onclick="deleteCourse(@course.CourseId)">Delete</button>
                        <button class="btn btn-info" onclick="viewStudents(@Convert.ToInt32(course.CourseId))">View Students</button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="studentsList" style="display: none;">
    <h3>Student List</h3>
    <ul id="students"></ul>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function addCourse() {
        var name = $("#courseName").val();
        var startDate = $("#startDate").val();
        var endDate = $("#endDate").val();
        var totalStudents = parseInt($("#totalStudents").val());
        var sessions = parseInt($("#sessions").val());

        if (!name || !startDate || !endDate || isNaN(totalStudents) || isNaN(sessions)) {
            alert("Please fill in all fields correctly.");
            return;
        }

        var course = {
            Name: name,
            StartDate: startDate,
            EndDate: endDate,
            TotalStudents: totalStudents,
            NumberOfSessions: sessions
        };

        $.ajax({
            url: "/Courses/AddCourse",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(course),
            success: function (response) {
                if (response.success) {
                    alert(response.message);
                    location.reload();
                } else {
                    alert("Failed to add course.");
                }
            },
            error: function () {
                alert("Error adding course.");
            }
        });
    }


    function editCourse(courseId, oldName) {
        var newName = prompt("Enter new course name:", oldName);
        if (newName) {
            var course = { CourseId: courseId, Name: newName };

            $.ajax({
                url: "/Courses/UpdateCourse",
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(course),
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert("Failed to update course.");
                    }
                },
                error: function () {
                    alert("Error updating course.");
                }
            });
        }
    }


    function deleteCourse(courseId) {
        if (confirm("Are you sure you want to delete this course?")) {
            $.ajax({
                url: "/Course/DeleteCourse?id=" + courseId,
                type: "DELETE",
                success: function (response) {
                    alert(response.message);
                    location.reload();
                }
            });
        }
    }

    function viewStudents(classId) {
        console.log(`📌 Fetching students for class ID: ${classId}`);

        $.ajax({
            url: '/Courses/ViewStudents',
            type: 'GET',
            data: { id: classId },
            success: function (response) {
                console.log("📌 Full response received:", response);

                if (response.success && Array.isArray(response.students)) {
                    let studentList = `<h3>Students in Class ${classId}</h3>
                                    <table class="table table-bordered">
                                    <thead><tr><th>ID</th><th>Name</th><th>Email</th></tr></thead>
                                    <tbody>`;

                    response.students.forEach(student => {
                        console.log("✅ Student Object:", student);
                        studentList += `
                            <tr>
                                <td>${student.id || 'N/A'}</td>
                                <td>${student.name || 'N/A'}</td>
                                <td>${student.email || 'N/A'}</td>
                            </tr>`;
                    });

                    studentList += "</tbody></table>";

                    // Hiển thị danh sách
                    $('#studentsList').html(studentList).show();
                } else {
                    console.error("⚠ No students found or invalid response", response);
                    $('#studentsList').html("<div class='alert alert-warning'>No students found for this class.</div>").show();
                }
            },
            error: function (xhr, status, error) {
                console.error(`⚠ AJAX Error - ${status}: ${error}`);
                $('#studentsList').html("<div class='alert alert-danger'>Error fetching students. Please try again.</div>").show();
            }
        });
    }

</script>
