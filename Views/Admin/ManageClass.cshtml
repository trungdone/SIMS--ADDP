@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model List<SIMS_App.Models.Class>

@{
    ViewData["Title"] = "Class Management";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 20px;
    }

    h2, h3 {
        color: #333;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        background: #fff;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    th, td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
    }

    th {
        background: #007bff;
        color: white;
    }

    button {
        padding: 8px 12px;
        border: none;
        cursor: pointer;
        margin: 5px;
    }

        button:hover {
            opacity: 0.8;
        }

    .edit-btn {
        background: #28a745;
        color: white;
    }

    .delete-btn {
        background: #dc3545;
        color: white;
    }

    .view-btn {
        background: #17a2b8;
        color: white;
    }

    input {
        padding: 8px;
        margin: 5px 0;
        width: 200px;
    }

    #editForm, #studentsList {
        margin-top: 20px;
        padding: 15px;
        background: white;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .student-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    .student-table th,
    .student-table td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }

    .student-table th {
        background-color: #f2f2f2;
    }

    .alert {
        padding: 10px;
        margin: 10px 0;
        border-radius: 4px;
    }

    .alert-warning {
        background-color: #fff3cd;
        color: #856404;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    #studentsList {
        margin-top: 20px;
        padding: 15px;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    #addStudentModal {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1050;
        background: #fff;
        padding: 20px;
        border: 1px solid #ccc;
        display: none;
        box-shadow: 0px 4px 15px rgba(0,0,0,0.2);
    }
</style>

<h2>Class Management</h2>

<table id="classTable">
    <tr>
        <th>ID</th>
        <th>Class Name</th>
        <th>Course ID</th>
        <th>Actions</th>
    </tr>
    @foreach (var cls in Model)
    {
        <tr>
            <td>@cls.Id</td>
            <td>@cls.Name</td>
            <td>@cls.CourseId</td>
            <td>
                <button class="edit-btn" onclick="editClass(@cls.Id, '@cls.Name', @cls.CourseId)">Edit</button>
                <button class="delete-btn" onclick="deleteClass(@cls.Id)">Delete</button>
                <button class="btn btn-info" onclick="loadStudents(@cls.Id)">View Students</button>
                <button class="btn btn-success" onclick="showAddStudentModal(@cls.Id)">Add Student</button>
            </td>
        </tr>
    }
</table>




<div id="addStudentModal" style="display:none;">
    <h4>Assign Student to Class</h4>
    <input type="hidden" id="classId">
    <select id="studentSelect" class="form-control mb-2">
        <option value="">-- Select Student --</option>
    </select>
    <button class="btn btn-primary" onclick="submitAddStudent()">Add</button>
    <button class="btn btn-secondary" onclick="$('#addStudentModal').hide()">Cancel</button>
</div>


<h3>Add New Class</h3>
<input type="text" id="className" placeholder="Class Name">
<input type="number" id="courseId" placeholder="Course ID">
<button onclick="addClass()">Add</button>

<div id="editForm" style="display: none;">
    <h3>Edit Class</h3>
    <input type="hidden" id="editClassId">
    <input type="text" id="editClassName" placeholder="Class Name">
    <input type="number" id="editCourseId" placeholder="Course ID">
    <button onclick="updateClass()">Save</button>
</div>

<div id="studentsList" style="display: none;">
    <h3>Student List</h3>
    <ul id="students"></ul>
</div>

<!-- Student List Modal -->
<div id="studentModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Students in Class</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table" id="studentListTable">
                    <thead>
                        <tr><th>Name</th><th>Email</th></tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<!-- jQuery AJAX -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

    function loadStudents(classId) {
        $.get("/Class/ViewStudents", { id: classId }, function (response) {
            if (response.success) {
                let rows = "";
                response.students.forEach((s, i) => {
                    rows += `<tr><td>${i + 1}</td><td>${s.name}</td><td>${s.email}</td></tr>`;
                });

                $("#studentListTable tbody").html(rows);
                $("#studentModal").modal("show");
            } else {
                alert(response.message || "No students found.");
            }
        });
    }

    function addClass() {
        var name = $("#className").val();
        var courseId = $("#courseId").val();

        if (!name || !courseId) {
            alert("Please fill in all fields!");
            return;
        }

        $.ajax({
            url: "/Class/AddClass",
            type: "POST",
            data: {
                name: name,
                courseId: courseId
            },
            success: function (response) {
                console.log("Add Class Response:", response);
                if (response.success) {
                    alert(response.message);
                    // Thêm dòng mới vào bảng mà không cần reload
                    var newRow = `
                        <tr>
                            <td>${response.newClassId}</td>
                            <td>${name}</td>
                            <td>${courseId}</td>
                            <td>
                                <button class="edit-btn" onclick="editClass(${response.newClassId}, '${name}', ${courseId})">Edit</button>
                                <button class="delete-btn" onclick="deleteClass(${response.newClassId})">Delete</button>
                                <button class="view-btn" onclick="viewStudents(${response.newClassId})">View Students</button>
                            </td>
                        </tr>`;
                    $("#classTable").append(newRow);

                    // Reset form
                    $("#className").val("");
                    $("#courseId").val("");
                } else {
                    alert("Error: " + response.message);
                }
            },
            error: function (xhr) {
                console.error("Error:", xhr);
                alert("Error adding class. Please check console for details.");
            }
        });
    }

    function editClass(id, name, courseId) {
        $("#editClassId").val(id);
        $("#editClassName").val(name);
        $("#editCourseId").val(courseId);
        $("#editForm").show();
    }

    function updateClass() {
        var id = $("#editClassId").val();
        var name = $("#editClassName").val();
        var courseId = $("#editCourseId").val();

        $.post("/Class/Edit", { id: id, name: name, courseId: courseId }, function (data) {
            alert(data.message);
            location.reload();
        });
    }

    function deleteClass(id) {
        if (confirm("Are you sure you want to delete this class?")) {
            $.post("/Class/DeleteClass", { id: id }, function (data) {
                alert(data.message);
                location.reload();
            });
        }
    }

    function viewStudents(classId) {
        console.log("Fetching students for class ID: " + classId);

        $.ajax({
            url: '/Class/ViewStudents',
            type: 'GET',
            data: { id: classId },
            success: function (response) {
                console.log("Full response:", response);

                if (response.success && Array.isArray(response.students)) {
                    let studentList = `
                        <h3>Students in Class ${classId}</h3>
                        <table class="student-table">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                </tr>
                            </thead>
                            <tbody>`;

                    response.students.forEach(student => {
                        console.log("Student data:", student);
                        studentList += `
                            <tr>
                                <td>${student.id || 'N/A'}</td>
                                <td>${student.name || 'N/A'}</td>
                                <td>${student.email || 'N/A'}</td>
                            </tr>`;
                    });

                    studentList += `</tbody></table>`;
                    $('#studentsList').html(studentList).show();
                } else {
                    $('#studentsList').html(`
                        <div class="alert alert-warning">
                            ${response.message || 'No students found'}
                        </div>
                    `).show();
                }
            },
            error: function (xhr) {
                console.error("Error:", xhr);
                $('#studentsList').html(`
                    <div class="alert alert-danger">
                        Error loading students. Please try again.
                    </div>
                `).show();
            }
        });
    }


</script>

<script>
    function showAddStudentModal(classId) {
        $("#classId").val(classId);

        // Load list of all students
        $.get("/Class/GetAllStudents", { classId: classId }, function (students) {
        
    let options = '<option value="">-- Select Student --</option>';
            students.forEach(s => {
                options += `<option value="${s.studentId}">${s.name} (${s.email})</option>`;
            });
            $("#studentSelect").html(options);
            $("#addStudentModal").show();
        });
    }


    function submitAddStudent() {
        const studentId = $("#studentSelect").val();
        const classId = $("#classId").val();

        if (!studentId) {
            alert("Please select a student.");
            return;
        }

        $.ajax({
            url: '/Class/AssignStudentToClass',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                studentId: parseInt($("#studentSelect").val()),
                classId: parseInt($("#classId").val())
            }),
            success: function (res) {
                alert(res.message);
                $("#addStudentModal").hide();
                location.reload();
            },
            error: function (xhr) {
                alert("Error assigning student: " + xhr.responseText);
                console.error(xhr);
            }
        });

    }
</script>



